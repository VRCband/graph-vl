name: graph-vl ci

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        operating-system: [ubuntu-latest]

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install PostgreSQL 11 client
      run: |
        sudo apt-get -yqq install libpq-dev
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt install libtesseract-dev
        sudo apt install libleptonica-dev
        sudo apt install tesseract-ocr
        sudo apt install libpq-dev
        pip install -e .
        pip install -r requirements.testing.txt
    - name: Setup database
      env:
        POSTGRES_SERVER: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      run: |
        python -m graphvl -t
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        POSTGRES_SERVER: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      run: |
        py.test -s -vv --cov-report xml --cov=graphvl tests/
